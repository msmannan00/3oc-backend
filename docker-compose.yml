version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    command: gunicorn -w 4 -b 0.0.0.0:8000 run:app
    ports:
      - "8000:8000"

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: 'three_of_cup'
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'C8AhyGudJkth9znouWe4rVW5tLzoaVjPyBuwuH27P5CuJkuRbUYQPcWjLYTp5HLC'
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"  # Map host port 8080 to container port 80
      - "443:443"
    volumes:
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app

volumes:
  postgres_data:
  redis_data:
  nginx_data:

networks:
  default:
    driver: bridge
