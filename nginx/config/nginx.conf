worker_processes auto;

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # Route for Flask App
        location / {
            proxy_pass http://app:8000;  # Use the service name 'app' from Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route for Metabase
        location /metabase/ {
            proxy_pass http://metabase:3000;  # Use the service name 'metabase' from Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Remove the `/metabase` prefix when forwarding to the Metabase service
            rewrite ^/metabase(/.*)?$ $1 break;
        }
    }
}
